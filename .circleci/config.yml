version: 2.1

parameters:
  elixir_base_image:
    type: string
    default: "924484830305.dkr.ecr.us-east-1.amazonaws.com/circleci-elixir:v1.16.2-erlang-26.2.3-debian-bookworm-20240130-slim"
  cache_version:
    type: string
    default: "1"

executors:
  elixir:
    resource_class: small
    docker:
      - image: << pipeline.parameters.elixir_base_image >>
        environment:
          MIX_ENV: "test"
  elixir_test:
    resource_class: small
    docker:
      - image: << pipeline.parameters.elixir_base_image >>
        environment:
          MIX_ENV: "test"

jobs:
  prepare:
    executor: elixir
    steps:
      - checkout
      - run:
          name: install hex & rebar
          command: mix do local.hex --force, local.rebar --force
      - restore_cache:
          keys:
            - v<< pipeline.parameters.cache_version >>-test-{{ checksum "mix.lock" }}-{{ .Branch }}
            - v<< pipeline.parameters.cache_version >>-test-{{ checksum "mix.lock" }}
      - run:
          name: gather dependencies
          command: mix deps.get
      - run:
          name: compile
          command: mix compile
      - save_cache:
          key: v<< pipeline.parameters.cache_version >>-test-{{ checksum "mix.lock" }}-{{ .Branch }}
          paths:
            - _build/test
            - deps

  dialyzer:
    executor: elixir
    steps:
      - checkout
      - run:
          name: install hex & rebar
          command: mix do local.hex --force, local.rebar --force
      - restore_cache:
          keys:
            - v<< pipeline.parameters.cache_version >>-test-{{ checksum "mix.lock" }}-{{ .Branch }}
            - v<< pipeline.parameters.cache_version >>-test-{{ checksum "mix.lock" }}
      - restore_cache:
          keys:
            - v<< pipeline.parameters.cache_version >>-plt-{{ checksum "mix.lock" }}-{{ .Branch }}
            - v<< pipeline.parameters.cache_version >>-plt-{{ checksum "mix.lock" }}
            - v<< pipeline.parameters.cache_version >>-plt
      - run:
          name: Run mix dialyzer
          command: mix dialyzer
      - save_cache:
          key: v<< pipeline.parameters.cache_version >>-plt-{{ checksum "mix.lock" }}-{{ .Branch }}
          paths:
            - _build/plts/local

  code_analysis:
    executor: elixir
    steps:
      - checkout
      - run:
          name: install hex & rebar
          command: mix do local.hex --force, local.rebar --force
      - restore_cache:
          keys:
            - v<< pipeline.parameters.cache_version >>-test-{{ checksum "mix.lock" }}-{{ .Branch }}
            - v<< pipeline.parameters.cache_version >>-test-{{ checksum "mix.lock" }}
      - run:
          name: Run mix format
          command: mix format --check-formatted
      - run:
          name: Run credo
          command: mix credo --strict
      - run:
          name: Run mix audit
          command: mix deps.audit --format human

  test:
    executor: elixir_test
    steps:
      - checkout
      - run:
          name: install hex & rebar
          command: mix do local.hex --force, local.rebar --force
      - restore_cache:
          keys:
            - v<< pipeline.parameters.cache_version >>-test-{{ checksum "mix.lock" }}-{{ .Branch }}
            - v<< pipeline.parameters.cache_version >>-test-{{ checksum "mix.lock" }}
      - run:
          name: Launch tests
          command: mkdir -p coveralls && mix coveralls | tee coveralls/output
      - store_test_results:
          path: _build/test/lib/ex_ssl_options/test-junit-report.xml
      - persist_to_workspace:
          root: coveralls
          paths:
            - output
 
  coverage:
    docker:
      - image: 924484830305.dkr.ecr.eu-west-1.amazonaws.com/coverage:main-latest
        environment:
          AWS_S3_BUCKET: welcome-releases
          AWS_S3_FOLDER: data/coverage
          COVERAGE_PARSER: coveralls
          COVERAGE_VARIATION_THRESHOLD: 0.3
    steps:
      - attach_workspace:
          at: /tmp/coveralls
      - run:
          name: Upload coverage and comment PR
          command: /app/bin/coverage eval 'Coverage.run("/tmp/coveralls/output")'


workflows:
  version: 2
  btd:
    jobs:
      - prepare:
          context:
            - aws
      - test:
          context:
            - aws
          requires:
            - prepare
      - code_analysis:
          context:
            - aws
          requires:
            - prepare
      - dialyzer:
          context:
            - aws
          requires:
            - prepare
      - coverage:
          context:
            - aws
            - coverage
          requires:
            - test
 
